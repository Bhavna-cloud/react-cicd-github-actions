name: Deploy Dist
on:
    push:
        branches:
            - main
            - 'feature/**'
        paths-ignore:
            - '.github/workflows/*'
            - README.md    
    workflow_dispatch:        

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4

            - name: Install Node 20
              uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} 

            - name: Install Dependencies
              run: npm ci

            - name: Run Tests
              run: npm run test

            - name: Send Slack Notification (Test)
              if: always()
              env:
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
              run: bash .github/scripts/slack_notify.sh "${{ job.status }}" "${{ github.ref_name }}" "${{ github.sha }}" "${{ github.repository }}" "Test"

    build:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4 

            - name: Install Node 20
              uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}     

            - name: Install Dependencies
              run: npm ci

            - name: Build Project
              run: npm run build

            # ✅ Archive Dist folder (Excluding node_modules & .git)
            - name: Archive Dist Folder
              run: tar --exclude=node_modules --exclude=.git -cvf dist.tar dist

            # ✅ Upload the tar file
            - name: Upload Dist Artifact
              uses: actions/upload-artifact@v4
              with:
                name: dist-files
                path: dist.tar

            - name: Send Slack Notification (Build)
              if: always()
              env:
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
              run: bash .github/scripts/slack_notify.sh "${{ job.status }}" "${{ github.ref_name }}" "${{ github.sha }}" "${{ github.repository }}" "Build"

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            # ✅ Download the tar file
            - name: Download Dist Artifact
              uses: actions/download-artifact@v4
              with:
                name: dist-files
                path: dist

            # ✅ Extract the tar file
            - name: Extract Dist Files
              run: tar -xvf dist/dist.tar -C dist

            - name: Deploy
              run: echo "Deployment is successful"

            - name: Send Slack Notification (Deploy)
              if: always()
              env:
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
              run: bash .github/scripts/slack_notify.sh "${{ job.status }}" "${{ github.ref_name }}" "${{ github.sha }}" "${{ github.repository }}" "Deploy"
